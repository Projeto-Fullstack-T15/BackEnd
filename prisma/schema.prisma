generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Account {
  id              Int            @id @default(autoincrement())
  email           String
  password        String
  phone           String
  account_type    AccountType
  user            User?
  address         Address?
  announcements   Announcement[]
  comments        Comment[]
  created_at      DateTime       @default(now())
  last_updated_at DateTime       @updatedAt

  @@map("accounts")
}

model User {
  id              Int      @id @default(autoincrement())
  name            String
  cpf             String
  birthday        DateTime
  description     String
  account_id      Int      @unique
  account         Account  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at      DateTime @default(now())
  last_updated_at DateTime @updatedAt

  @@map("users")
}

model Address {
  id              Int      @id @default(autoincrement())
  zip_code        String
  state           String
  city            String
  street          String
  number          String
  complement      String?
  account_id      Int      @unique
  account         Account  @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at      DateTime @default(now())
  last_updated_at DateTime @updatedAt

  @@map("addresses")
}

model Announcement {
  id              Int       @id @default(autoincrement())
  brand           String
  model           String
  color           String
  year            Int
  fuel_type       String
  mileage         Float
  price           Float
  description     String
  cover_image     String
  gallery_images  Image[]
  account_id      Int
  account         Account   @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  comments        Comment[]
  created_at      DateTime  @default(now())
  last_updated_at DateTime  @updatedAt

  @@map("announcements")
}

model Image {
  id              Int          @id @default(autoincrement())
  url             String
  announcement_id Int
  announcement    Announcement @relation(fields: [announcement_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("announcements_images")
}

model Comment {
  id              Int          @id @default(autoincrement())
  text            String
  announcement_id Int
  account_id      Int
  announcement    Announcement @relation(fields: [announcement_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  account         Account      @relation(fields: [account_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  created_at      DateTime     @default(now())
  last_updated_at DateTime     @updatedAt

  @@map("announcements_comments")
}

enum AccountType {
  BUYER
  ANNOUNCER
}
